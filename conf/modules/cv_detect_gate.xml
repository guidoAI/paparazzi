<!DOCTYPE module SYSTEM "module.dtd">

<module name="cv_detect_gate" dir="computer_vision">
  <doc>
    <description>
	Detects gates as used in the IROS drone races, i.e., square colored gates. It does so with snake gate detection, a computationally efficient method that works 
	onboard of the computationally constrained Parrot Bebop drones.
    </description>
    <!-- <define name="UNDISTORT_MIN_X_NORMALIZED" value="-2.0" description="Minimal normalized x-coordinate to be used for the undistortion"/> --> 
    <define name="DETECT_GATE_FPS" value="0" description="The (maximum) frequency to run the calculations at. If zero, it will max out at the camera frame rate"/>
    <define name="DETECT_GATE_CAMERA" value="bottom_camera|front_camera" description="The V4L2 camera device that is used for the calculations"/>
  </doc>

<!--
  <settings>
    <dl_settings>
      <dl_settings NAME="Detect gate">
	 <dl_setting var="min_x_normalized"  min="-4.0" step="0.1" max="0.0" shortname="min_x_n" param="DETECT_GATE_MIN_X_NORMALIZED"/> 
      </dl_settings>
    </dl_settings>
  </settings> -->

  <depends>video_thread</depends>

  <header>
    <file name="detect_gate.h"/>
  </header>

  <init fun="detect_gate_init()"/>
  <makefile target="ap|nps">
    <file name="detect_gate.c"/>
    <file name="image.c" dir="modules/computer_vision/lib/vision"/>
    <file name="snake_gate_detection.c" dir="modules/computer_vision"/>    
  </makefile>
</module>

